start: query_expr -> to_dataframe

query_expr: [query_expr set_op] select [ "ORDER"i "BY"i (order_by_expr ",")*  order_by_expr] [ "LIMIT"i limit_count [ "OFFSET"i skip_rows ] ] -> full_query

select: "SELECT"i [SELECT_CONSTRAINT] [(select_expr ",")*] select_expr "FROM"i [(from_expr ",")*] from_expr [ "WHERE"i where_expr ] [ "GROUP"i "BY"i [(groupby_expr ",")*] groupby_expr ] [ "HAVING"i having_expr] [ "WINDOW"i window_expr ]

where_expr: bool_expression

select_expr.0: expression_math [ [ "AS"i ] alias ] -> select_expression

?from_expr: from_item -> from_expression

order_by_expr: expression [ order ]  -> order_by_expression

having_expr: bool_expression

groupby_expr: expression -> group_by

window_expr: [window_expr ","] _window_name "AS"i ( window_definition )

set_op: "UNION"i ( "ALL"i | "DISTINCT"i ) | "INTERSECT"i "DISTINCT"i | "EXCEPT"i "DISTINCT"i

from_item: NAME [ [ "AS"i ] alias ] -> table
            | join -> join
            | ( "(" query_expr ")" ) [ [ "AS"i ] alias ] -> subquery
            | with_query_name [ [ "AS"i ] alias ]

join: from_item [ JOIN_TYPE ] "JOIN"i from_item [ "ON"i bool_expression ] -> join_expression

JOIN_TYPE.5: "INNER"i | "CROSS"i | /FULL\sOUTER/i | /LEFT\sOUTER/i |  /RIGHT\sOUTER/i | "FULL"i | "LEFT"i | "RIGHT"i

?expression: [NAME "."] (NAME | STAR) -> column_name
            | literal
            | "CAST"i "(" expression "AS"i TYPENAME ")" -> as_type
            | function "(" expression ")" -> sql_function

?expression_math: expression_product
               | expression_math "+" expression_product -> expression_add
               | expression_math "-" expression_product -> expression_sub

column_name: [NAME "."] NAME
?expression_product: expression
                  | expression_product "*" expression -> expression_mul
                  | expression_product "/" expression -> expression_div

SELECT_CONSTRAINT.5: "ALL"i | "DISTINCT"i
TYPENAME: "object"i | "int64"i | "float64"i | "bool"i | "datetime64"i | "timedelta[ns]"i | "category"i
?function: NAME -> function_name
alias: NAME -> alias_string
_window_name: NAME
limit_count: integer -> limit_count
skip_rows: integer
bool_expression: [bool_expression ("AND"i | "OR"i)] (equals | not_equals | greater_than | less_than)
equals: expression "=" expression
not_equals: expression ("<>" | "!=") expression
greater_than: expression ">" expression
less_than: expression "<" expression
?literal: boolean -> bool
       | number_expr -> number
       | "'" /[^']+/ "'" -> string
boolean: "true"i -> true
       | "false"i -> false
?number_expr: product
            | number_expr "+" product -> add
            | number_expr "-" product -> sub

?product: NUMBER
        | product "*" NUMBER -> mul
        | product "/" NUMBER -> div

integer: /[1-9][0-9]*/
STAR: "*"
order: NAME -> order
window_definition:
with_query_name:
timestamp_expression:

%import common.CNAME -> NAME
%import common.NUMBER
%import common.WS
%ignore WS
